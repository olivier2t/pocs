---
version: "2"
use_cases:
- name: aws
  sections:
  - name: Cycloid Platform
    groups:
    - name: AWS Access Configuration
      technologies: [pipeline]
      vars:
      - name: "AWS access key"
        description: "Amazon AWS access key for Terraform."
        key: aws_access_key
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - aws
        type: string
        default: "((aws.access_key))"
        required: true
      - name: "AWS secret key"
        description: "Amazon AWS secret key for Terraform."
        key: aws_secret_key
        widget: cy_cred
        widget_config:
          display_keys: true
          cred_types:
            - aws
        type: string
        default: "((aws.secret_key))"
        required: true
      - name: "Amazon AWS region"
        description: "Amazon AWS region to use for Terraform."
        key: aws_region
        widget: auto_complete
        type: string
        values_ref: https://cycloid-demo-stackforms-values.s3.eu-west-1.amazonaws.com/aws-regions.json
        default: eu-west-1
        required: true

    - name: Networking
      technologies: [pipeline]
      vars:
      - name: "VPC CIDR"
        description: "The CIDR of the VPC to create."
        key: vpc_cidr
        widget: simple_text
        type: string
        default: "10.0.0.0/16"
        validations:
        # - regexp: "^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\/[0-9]{1,2}$"
        #   error_message: "Please enter a valid CIDR such as 10.0.0.0/16"
        required: true

    - name: Security
      technologies: [terraform]
      vars:
      - name: "Bastion"
        description: "Whether to deploy a Bastion in AZ1 public subnet or not."
        key: module.bastion.bastion
        widget: switch
        type: boolean
        default: false
        required: true

    - name: SSH Keypair for Cycloid Platform instances
      technologies: [pipeline]
      vars:
      - name: "SSH Public key"
        description: "The public SSH key to connect via SSH and execute the Ansible playbook"
        key: keypair_public
        widget: cy_cred
        type: string
        default: ((keypair.ssh_pub))
        required: true
      - name: "SSH Private key"
        description: "The private SSH key to connect via SSH and execute the Ansible playbook"
        key: keypair_private
        widget: cy_cred
        type: string
        default: ((keypair.ssh_prv))
        required: true

    - name: RDS Instance specifications for MySQL
      technologies: [terraform]
      vars:
      - name: "MySQL RDS Instance class"
        description: "Instance class for the MySQL RDS cluster."
        key: module.database.rds_mysql_instance_class
        widget: auto_complete
        type: string
        default: "db.t3.small"
        values_ref: https://cycloid-demo-stackforms-values.s3.eu-west-1.amazonaws.com/aws-rds-instance-types.json
        required: true
      - name: "Allocated Storage"
        unit: Go
        description: "Allocated storage for the MySQL RDS service."
        key: module.database.rds_mysql_allocated_storage
        widget: slider_range
        type: integer
        default: 20
        values:
            - 10
            - 100
        required: true
      - name: "Max Allocated Storage"
        unit: Go
        description: "Max allocated storage for the MySQL RDS service. 0 disables Storage Autoscaling."
        key: module.database.rds_mysql_max_allocated_storage
        widget: slider_range
        type: integer
        default: 100
        values:
            - 0
            - 100
        required: true
      - name: "Multi-AZ"
        description: "Whether to enable RDS MySQL Multi-AZ mode or not."
        key: module.database.rds_mysql_multiaz
        widget: switch
        type: boolean
        default: true
        required: true

    - name: RDS Instance specifications for PostgreSQL
      technologies: [terraform]
      vars:
      - name: "PostgreSQL RDS Instance class"
        description: "Instance class for the PostgreSQL RDS cluster."
        key: module.database.rds_postgres_instance_class
        widget: auto_complete
        type: string
        default: "db.t3.small"
        values_ref: https://cycloid-demo-stackforms-values.s3.eu-west-1.amazonaws.com/aws-rds-instance-types.json
        required: true
      - name: "Allocated Storage"
        unit: Go
        description: "Allocated storage for the PostgreSQL RDS service."
        key: module.database.rds_postgres_allocated_storage
        widget: slider_range
        type: integer
        default: 20
        values:
            - 10
            - 100
        required: true
      - name: "Max Allocated Storage"
        unit: Go
        description: "Max allocated storage for the PostgreSQL RDS service. 0 disables Storage Autoscaling."
        key: module.database.rds_postgres_max_allocated_storage
        widget: slider_range
        type: integer
        default: 100
        values:
            - 0
            - 100
        required: true
      - name: "Multi-AZ"
        description: "Whether to enable RDS PostgreSQL Multi-AZ mode or not."
        key: module.database.rds_postgres_multiaz
        widget: switch
        type: boolean
        default: true
        required: true

    - name: Instance specifications for ElasticSearch
      technologies: [terraform]
      vars:
      - name: "ElasticSearch Instance Type"
        description: "Instance type for the ElasticSearch server."
        key: module.database.es_instance_type
        widget: auto_complete
        type: string
        default: "t3a.large"
        values_ref: https://cycloid-demo-stackforms-values.s3.eu-west-1.amazonaws.com/aws-ec2-instance-types.json
        required: true
      - name: "ElasticSearch Disk Size"
        unit: Go
        description: "The EBS disk size for the ElasticSearch data."
        key: module.database.es_disk_size
        widget: slider_range
        type: integer
        default: 30
        values:
            - 20
            - 250
        required: true

    - name: Cycloid Core Platform Infrastructure
      technologies: [terraform]
      vars:
      - name: "Instance type"
        description: "Instance type for the Core Cycloid Platform."
        key: module.core.core_instance_type
        widget: auto_complete
        type: string
        default: "t3a.medium"
        values_ref: https://cycloid-demo-stackforms-values.s3.eu-west-1.amazonaws.com/aws-ec2-instance-types.json
        required: true
      - name: "Disk size"
        unit: Go
        description: "Disk size for the Core Cycloid Platform."
        key: module.core.core_volume_size
        widget: slider_range
        type: integer
        default: 30
        values:
            - 20
            - 250
        required: true

    - name: Cycloid Core Platform Configuration
      technologies: [terraform]
      vars:
      - name: "Cycloid Core Hosted Zone"
        description: "AWS Hosted Zone on which to add sub-domains."
        key: module.core.core_hosted_zone
        widget: simple_text
        type: string
        default: "eu.cycloid.io"
        validations:
        - regexp: "^[a-z0-9.]+$"
          error_message: "Please enter a valid domain name such as eu.cycloid.io"
        required: true
      - name: "Cycloid Console Domain Name"
        description: "SubDomain name for the Cycloid Console."
        key: module.core.core_domain_console
        widget: simple_text
        type: string
        default: "console"
        validations:
        # - regexp: "^[a-z0-9.]+$"
        #   error_message: "Please enter a valid domain name such as console2"
        required: true
      - name: "Cycloid API Domain Name"
        description: "SubDomain name for the Cycloid API."
        key: module.core.core_domain_api
        widget: simple_text
        type: string
        default: "api"
        validations:
        # - regexp: "^[a-z0-9.]+$"
        #   error_message: "Please enter a valid domain name such as api2"
        required: true
      - name: "Concourse Domain Name"
        description: "SubDomain name for the Concourse API."
        key: module.core.core_domain_concourse
        widget: simple_text
        type: string
        default: "scheduler"
        validations:
        # - regexp: "^[a-z0-9.]+$"
        #   error_message: "Please enter a valid domain name such as scheduler2"
        required: true
