# resource_types:
#   - name: api-call
#     type: docker-image
#     source:
#       repository: jgriff/http-resource

# resources:
  # - name: gitlab-secret-pipeline
  #   type: api-call
  #   source:
  #     url: "((gitlab-api-address))/api/v4/projects/((project_id_secret))/trigger/pipeline?token=((pipeline_token_secret))&ref=((DEP_ENVIRONMENT_INFRA_BRANCH))"
  #     # out_only: true
  #     headers:
  #       Content-Type: application/x-www-form-urlencoded
  #     text: |
  #       variables[ACTION]=((SEC_ACTION))
  #       &variables[SECRET_NAME]=((SEC_SECRET_NAME))
  #       &variables[REGION]=((SEC_REGION))
  #       &variables[AWS_ACCESS_KEY]=((SEC_AWS_ACCESS_KEY))
  #       &variables[AWS_SECRET_KEY]=((SEC_AWS_SECRET_KEY))
  #       &variables[AWS_SESSION_TOKEN]=((SEC_AWS_SESSION_TOKEN))
  #       &variables[INFRA_PASSWORD]=((SEC_INFRA_PASSWORD))
  #       &variables[SPLUNK_TOKEN]=((SEC_SPLUNK_TOKEN))
  #       &variables[VCS_OAUTH_TOKEN_ID]=((SEC_VCS_OAUTH_TOKEN_ID))
  #       &variables[GITLAB_PERSONAL_ACCESS_TOKEN]=((SEC_GITLAB_PERSONAL_ACCESS_TOKEN))
  #       &variables[GITLAB_USER]=((SEC_GITLAB_USER))
  #       &variables[PLT_APP_GITLAB_TOKEN]=((SEC_PLT_APP_GITLAB_TOKEN))
  #       &variables[ENV_APP_GITLAB_TOKEN]=((SEC_ENV_APP_GITLAB_TOKEN))
  #     version:
  #       jq: .id
  #       hash: body

  # - name: gitlab-deploy-pipeline
  #   type: api-call
  #   source:
  #     url: "((gitlab-api-address))/api/v4/projects/((project_id_deploy))/trigger/pipeline?token=((pipeline_token_deploy))&ref=((DEP_ENVIRONMENT_INFRA_BRANCH))"
  #     # out_only: true
  #     headers:
  #       Content-Type: application/x-www-form-urlencoded
  #     text: |
  #       variables[ACTION]=((DEP_ACTION))
  #       &variables[CONFIG_DIR]=((DEP_CONFIG_DIR))
  #       &variables[ENVIRONMENT_LAYER_NAME]=((DEP_ENVIRONMENT_LAYER_NAME))
  #       &variables[ENVIRONMENT_SUFFIX]=((DEP_ENVIRONMENT_SUFFIX))
  #       &variables[ENVIRONMENT_INFRA_BRANCH]=((DEP_ENVIRONMENT_INFRA_BRANCH))
  #       &variables[TF_LOG]=((DEP_TF_LOG))
  #       &variables[AWS_ACCESS_KEY]=((DEP_AWS_ACCESS_KEY))
  #       &variables[AWS_SECRET_KEY]=((DEP_AWS_SECRET_KEY))
  #       &variables[AWS_SESSION_TOKEN]=((DEP_AWS_SESSION_TOKEN))
  #       &variables[AWS_REGION]=((DEP_AWS_REGION))
  #       &variables[TYPE_ENV]=((DEP_TYPE_ENV))
  #     version:
  #       jq: .id
  #       hash: body


groups:
- name: overview
  jobs:
    - trigger-pipelines

jobs:
  - name: trigger-pipelines
    plan:
      - task: trigger-secret-pipeline
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: public.ecr.aws/h1i8d0v5/cycloid-toolkit
          run:
            path: /bin/bash
            args:
              - '-c'
              - |
                echo "Trigger GitLab pipeline"
                curl --request POST \
                --output response.json \
                --form variables[ACTION]=${ACTION} \
                --form variables[SECRET_NAME]=${SECRET_NAME} \
                --form variables[REGION]=${REGION} \
                --form variables[AWS_ACCESS_KEY]=${AWS_ACCESS_KEY} \
                --form variables[AWS_SECRET_KEY]=${AWS_SECRET_KEY} \
                --form variables[AWS_SESSION_TOKEN]=${AWS_SESSION_TOKEN} \
                --form variables[INFRA_PASSWORD]=${INFRA_PASSWORD} \
                --form variables[SPLUNK_TOKEN]=${SPLUNK_TOKEN} \
                --form variables[VCS_OAUTH_TOKEN_ID]=${VCS_OAUTH_TOKEN_ID} \
                --form variables[GITLAB_PERSONAL_ACCESS_TOKEN]=${GITLAB_PERSONAL_ACCESS_TOKEN} \
                --form variables[GITLAB_USER]=${GITLAB_USER} \
                --form variables[PLT_APP_GITLAB_TOKEN]=${PLT_APP_GITLAB_TOKEN} \
                --form variables[ENV_APP_GITLAB_TOKEN]=${ENV_APP_GITLAB_TOKEN} \
                "${GITLAB_API_ADDRESS}/api/v4/projects/${PROJECT_ID}/trigger/pipeline?token=${PIPELINE_TOKEN}&ref=${REF}"
                export PIPELINE_ID= $(jq -r '.id' < response.json))}
                echo "Checking status of GitLab pipeline ID ${PIPELINE_ID}"
                export PIPELINE_STATUS="created"
                until [ ${PIPELINE_STATUS} == "success" || ${PIPELINE_STATUS} == "failed" || ${PIPELINE_STATUS} == "canceled" ];
                do
                  export PIPELINE_STATUS=$(curl --header "PRIVATE-TOKEN: ${PRIVATE_TOKEN}" "${GITLAB_API_ADDRESS}/api/v4/projects/${PROJECT_ID}/pipelines/${PIPELINE_ID}")
                  sleep 10
                done
                if [ ${PIPELINE_STATUS} == "success" ]; then
                  echo "Pipeline completed successfully"
                  exit 0; 
                else
                  echo "Pipeline failed (status: ${PIPELINE_STATUS})"
                  exit 1;
                fi

          params:
            GITLAB_API_ADDRESS: ((gitlab-api-address))
            PROJECT_ID: ((project_id_secret))
            PIPELINE_TOKEN: ((pipeline_token_secret))
            REF: ((DEP_ENVIRONMENT_INFRA_BRANCH))
            PRIVATE_TOKEN: ((access_token_secret))
            ACTION: ((SEC_ACTION))
            SECRET_NAME: ((SEC_SECRET_NAME))
            REGION: ((SEC_REGION))
            AWS_ACCESS_KEY: ((SEC_AWS_ACCESS_KEY))
            AWS_SECRET_KEY: ((SEC_AWS_SECRET_KEY))
            AWS_SESSION_TOKEN: ((SEC_AWS_SESSION_TOKEN))
            INFRA_PASSWORD: ((SEC_INFRA_PASSWORD))
            SPLUNK_TOKEN: ((SEC_SPLUNK_TOKEN))
            VCS_OAUTH_TOKEN_ID: ((SEC_VCS_OAUTH_TOKEN_ID))
            GITLAB_PERSONAL_ACCESS_TOKEN: ((SEC_GITLAB_PERSONAL_ACCESS_TOKEN))
            GITLAB_USER: ((SEC_GITLAB_USER))
            PLT_APP_GITLAB_TOKEN: ((SEC_PLT_APP_GITLAB_TOKEN))
            ENV_APP_GITLAB_TOKEN: ((SEC_ENV_APP_GITLAB_TOKEN))

      - task: trigger-deploy-pipeline
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: public.ecr.aws/h1i8d0v5/cycloid-toolkit
          run:
            path: /bin/bash
            args:
              - '-c'
              - |
                curl --request POST \
                --form variables[ACTION]=${ACTION} \
                --form variables[CONFIG_DIR]=${CONFIG_DIR} \
                --form variables[ENVIRONMENT_LAYER_NAME]=${ENVIRONMENT_LAYER_NAME} \
                --form variables[ENVIRONMENT_SUFFIX]=${ENVIRONMENT_SUFFIX} \
                --form variables[ENVIRONMENT_INFRA_BRANCH]=${ENVIRONMENT_INFRA_BRANCH} \
                --form variables[TF_LOG]=${TF_LOG} \
                --form variables[AWS_ACCESS_KEY]=${AWS_ACCESS_KEY} \
                --form variables[AWS_SECRET_KEY]=${AWS_SECRET_KEY} \
                --form variables[AWS_SESSION_TOKEN]=${AWS_SESSION_TOKEN} \
                --form variables[AWS_REGION]=${AWS_REGION} \
                --form variables[TYPE_ENV]=${TYPE_ENV} \
                "${GITLAB_API_ADDRESS}/api/v4/projects/${PROJECT_ID}/trigger/pipeline?token=${PIPELINE_TOKEN}&ref=${REF}"
          params:
            GITLAB_API_ADDRESS: ((gitlab-api-address))
            PROJECT_ID: ((project_id_deploy))
            PIPELINE_TOKEN: ((pipeline_token_deploy))
            REF: ((DEP_ENVIRONMENT_INFRA_BRANCH))
            ACTION: ((DEP_ACTION))
            CONFIG_DIR: ((DEP_CONFIG_DIR))
            ENVIRONMENT_LAYER_NAME: ((DEP_ENVIRONMENT_LAYER_NAME))
            ENVIRONMENT_SUFFIX: ((DEP_ENVIRONMENT_SUFFIX))
            ENVIRONMENT_INFRA_BRANCH: ((DEP_ENVIRONMENT_INFRA_BRANCH))
            TF_LOG: ((DEP_TF_LOG))
            AWS_ACCESS_KEY: ((DEP_AWS_ACCESS_KEY))
            AWS_SECRET_KEY: ((DEP_AWS_SECRET_KEY))
            AWS_SESSION_TOKEN: ((DEP_AWS_SESSION_TOKEN))
            AWS_REGION: ((DEP_AWS_REGION))
            TYPE_ENV: ((DEP_TYPE_ENV))
