resource_types:
  - name: api-call
    type: docker-image
    source:
      repository: jgriff/http-resource

resources:
  - name: gitlab-secret-pipeline
    type: api-call
    source:
      url: "((gitlab-api-address))/api/v4/projects/((project_id_secret))/trigger/pipeline?token=((pipeline_token_secret))&ref=((DEP_ENVIRONMENT_INFRA_BRANCH))"
      out_only: true
      headers:
        Content-Type: application/x-www-form-urlencoded
      text: |
        variables[ACTION]=((SEC_ACTION))
        &variables[SECRET_NAME]=((SEC_SECRET_NAME))
        &variables[REGION]=((SEC_REGION))
        &variables[AWS_ACCESS_KEY]=((SEC_AWS_ACCESS_KEY))
        &variables[AWS_SECRET_KEY]=((SEC_AWS_SECRET_KEY))
        &variables[AWS_SESSION_TOKEN]=((SEC_AWS_SESSION_TOKEN))
        &variables[INFRA_PASSWORD]=((SEC_INFRA_PASSWORD))
        &variables[SPLUNK_TOKEN]=((SEC_SPLUNK_TOKEN))
        &variables[VCS_OAUTH_TOKEN_ID]=((SEC_VCS_OAUTH_TOKEN_ID))
        &variables[GITLAB_PERSONAL_ACCESS_TOKEN]=((SEC_GITLAB_PERSONAL_ACCESS_TOKEN))
        &variables[GITLAB_USER]=((SEC_GITLAB_USER))
        &variables[PLT_APP_GITLAB_TOKEN]=((SEC_PLT_APP_GITLAB_TOKEN))
        &variables[ENV_APP_GITLAB_TOKEN]=((SEC_ENV_APP_GITLAB_TOKEN))
      version:
        jq: .id
        hash: body

  - name: gitlab-deploy-pipeline
    type: api-call
    source:
      url: "((gitlab-api-address))/api/v4/projects/((project_id_deploy))/trigger/pipeline?token=((pipeline_token_deploy))&ref=((DEP_ENVIRONMENT_INFRA_BRANCH))"
      out_only: true
      headers:
        Content-Type: application/x-www-form-urlencoded
      text: |
        variables[ACTION]=((DEP_ACTION))
        &variables[CONFIG_DIR]=((DEP_CONFIG_DIR))
        &variables[ENVIRONMENT_LAYER_NAME]=((DEP_ENVIRONMENT_LAYER_NAME))
        &variables[ENVIRONMENT_SUFFIX]=((DEP_ENVIRONMENT_SUFFIX))
        &variables[ENVIRONMENT_INFRA_BRANCH]=((DEP_ENVIRONMENT_INFRA_BRANCH))
        &variables[TF_LOG]=((DEP_TF_LOG))
        &variables[AWS_ACCESS_KEY]=((DEP_AWS_ACCESS_KEY))
        &variables[AWS_SECRET_KEY]=((DEP_AWS_SECRET_KEY))
        &variables[AWS_SESSION_TOKEN]=((DEP_AWS_SESSION_TOKEN))
        &variables[AWS_REGION]=((DEP_AWS_REGION))
        &variables[TYPE_ENV]=((DEP_TYPE_ENV))
      version:
        jq: .id
        hash: body


groups:
- name: overview
  jobs:
    - trigger-pipelines

jobs:
  - name: trigger-pipelines
    plan:
      - put: gitlab-secret-pipeline

      - task: check-secret-pipeline-status
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: public.ecr.aws/h1i8d0v5/cycloid-toolkit
          run:
            path: /bin/bash
            args:
              - '-c'
              - |
                ls -la
                ls -la gitlab-secret-pipeline
                ls -la /tmp
                export PIPELINE_ID= $(jq -r '.id' < gitlab-secret-pipeline/body))}
                echo "Checking status of GitLab pipeline ID ${PIPELINE_ID}:"
                export PIPELINE_STATUS="created"
                until [ ${PIPELINE_STATUS} == "success" || ${PIPELINE_STATUS} == "failed" || ${PIPELINE_STATUS} == "canceled" ];
                do
                  export PIPELINE_STATUS=$(curl --header "PRIVATE-TOKEN: ${PRIVATE_TOKEN}" "${GITLAB_API_ADDRESS}/api/v4/projects/${PROJECT_ID}/pipelines/${PIPELINE_ID}")
                  sleep 10
                done
                if [ ${PIPELINE_STATUS} == "success" ]; then exit 0; else exit 1; fi
          inputs:
          - name: gitlab-secret-pipeline
          params:
            GITLAB_API_ADDRESS: ((gitlab-api-address))
            PROJECT_ID: ((project_id_secret))
            PRIVATE_TOKEN: ((access_token_secret))

      - put: gitlab-deploy-pipeline
